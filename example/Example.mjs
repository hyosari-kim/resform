// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Curry from "../node_modules/rescript/lib/es6/curry.js";
import * as React from "react";
import * as Js_exn from "../node_modules/rescript/lib/es6/js_exn.js";
import * as ReactDom from "react-dom";
import * as Header$Resform from "./Header.mjs";
import * as ResForm$Resform from "../src/ResForm.mjs";
import * as SpreadProps$Resform from "../src/SpreadProps.mjs";

function get(values, field) {
  if (field) {
    return values.age;
  } else {
    return values.name;
  }
}

function set(values, field, value) {
  if (field) {
    return {
            name: values.name,
            age: value
          };
  } else {
    return {
            name: value,
            age: values.age
          };
  }
}

var FieldState = {
  get: get,
  set: set
};

var Form = ResForm$Resform.Make({
      set: set,
      get: get
    });

var initialValue = {
  name: "",
  age: 0
};

function Example$Example(Props) {
  var match = Curry._2(Form.use, initialValue, /* [] */0);
  return React.createElement("form", undefined, React.createElement("h2", {
                  className: "h2"
                }, "ResForm Demo"), React.createElement(SpreadProps$Resform.make, {
                  children: React.createElement("input", undefined),
                  props: Curry._1(match.register, /* Name */0)
                }));
}

var Example = {
  FieldState: FieldState,
  Form: Form,
  initialValue: initialValue,
  make: Example$Example
};

function Example$Forms(Props) {
  return React.createElement("div", undefined, React.createElement(Header$Resform.make, {}), React.createElement(Example$Example, {}));
}

var Forms = {
  make: Example$Forms
};

var root = document.querySelector("#root");

if (root == null) {
  Js_exn.raiseError("#root node not found");
} else {
  ReactDom.render(React.createElement(Example$Forms, {}), root);
}

export {
  Example ,
  Forms ,
  
}
/* Form Not a pure module */
